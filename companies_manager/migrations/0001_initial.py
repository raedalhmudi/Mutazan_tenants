# Generated by Django 5.1.4 on 2025-04-18 21:31

import django.core.validators
import django.db.models.deletion
import django_tenants.postgresql_backend.base
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ViolationsType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Reverse entry path', 'عكس مسار دخول'), ('Reverse exit path', 'عكس مسار خروج'), ('Entry without a plate', 'دخول بغير لوحه '), ('Exit without a plate', 'خروج بغير لوحه '), ('No first weight card', 'عدم وجود بطاقة وزن اولى'), ('Exceeding the legal weight', 'تجاوز الوزن القانوني '), ('Incomplete data', 'بيانات غير مكتمله'), ('Incorrect invoice', 'فاتوره غير صحيحه')], max_length=255, verbose_name='اسم المخالفة')),
                ('description', models.TextField(blank=True, null=True, verbose_name='وصف المخالفة')),
                ('penalty_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='قيمة الغرامة')),
                ('violation_code', models.CharField(max_length=50, unique=True, verbose_name='رمز المخالفة')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='آخر تحديث')),
            ],
            options={
                'verbose_name': 'نوع المخالفة',
                'verbose_name_plural': 'أنواع المخالفات',
            },
        ),
        migrations.CreateModel(
            name='WeightCardMain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema_name', models.CharField(max_length=50, verbose_name='اسم الـ Schema')),
                ('plate_number', models.CharField(max_length=50, verbose_name='رقم اللوحة ')),
                ('violation_type', models.CharField(blank=True, max_length=255, null=True, verbose_name=' نوع المخالفة ')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ ووقت المخالفة ')),
                ('device_vio', models.CharField(blank=True, max_length=255, null=True, verbose_name=' الكاميرا ')),
                ('entry_exit_log', models.CharField(blank=True, max_length=255, null=True, verbose_name='العمليه ')),
                ('weight_card_vio', models.CharField(blank=True, max_length=255, null=True, verbose_name='بطاقة الوزن')),
                ('empty_weight', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True, verbose_name='الوزن الفارغ')),
                ('loaded_weight', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True, verbose_name='الوزن المحمل')),
                ('net_weight', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True, verbose_name='الوزن الصافي')),
                ('driver_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='اسم السائق')),
                ('entry_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ الدخول')),
                ('exit_date', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ الخروج')),
                ('quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True, verbose_name='الكمية')),
                ('material', models.CharField(blank=True, max_length=255, null=True, verbose_name='المادة')),
                ('status', models.CharField(choices=[('incomplete', 'بطاقة غير مكتملة ❌'), ('complete', 'بطاقة مكتملة ✅')], default='incomplete', max_length=10, verbose_name='حالة البطاقة')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
            ],
            options={
                'verbose_name': 'بطاقة الوزن الرئيسية',
                'verbose_name_plural': 'بطاقات الوزن الرئيسية',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema_name', models.CharField(db_index=True, max_length=63, unique=True, validators=[django_tenants.postgresql_backend.base._check_schema_name])),
                ('company_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[\\D]+$', message='يجب ألا يحتوي على أرقام')], verbose_name='اسم الشركة')),
                ('business_type', models.CharField(max_length=255, verbose_name='نوع النشاط')),
                ('registration_number', models.PositiveIntegerField(unique=True, verbose_name='رقم السجل التجاري')),
                ('country', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[\\D]+$', message='يجب ألا يحتوي على أرقام')], verbose_name='الدولة')),
                ('address', models.CharField(max_length=255, verbose_name='العنوان')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\d+$', message='يجب أن يحتوي على أرقام فقط')], verbose_name='رقم الهاتف')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='البريد الإلكتروني')),
                ('logo', models.ImageField(upload_to='company_logos/%Y/%m/%d', verbose_name='شعار الشركة')),
                ('employees_count', models.PositiveIntegerField(verbose_name='عدد الموظفين')),
                ('founded_date', models.DateField(verbose_name='تاريخ التأسيس')),
                ('services_offered', models.TextField(verbose_name='الخدمات المقدمة')),
                ('port_license_number', models.PositiveIntegerField(unique=True, verbose_name='تصريح العمل بالميناء')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('admin_user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='المسؤول الإداري')),
            ],
            options={
                'verbose_name_plural': 'الشركات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(db_index=True, default=True)),
                ('domain', models.CharField(max_length=255, unique=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='companies_manager.company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\d+$', message='يجب أن يحتوي على أرقام فقط')], verbose_name='رقم الهاتف')),
                ('address', models.TextField(blank=True, null=True, verbose_name='عنوان السكن')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='user_profiles/%Y/%m/%d', verbose_name='صورة المستخدم')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'ملف المستخدم',
                'verbose_name_plural': 'ملفات المستخدمين',
            },
        ),
    ]
